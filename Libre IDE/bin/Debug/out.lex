IDENTIFICADOR: int
IDENTIFICADOR: vector
CARACTER_ESPECIAL: ,
IDENTIFICADOR: su
IDENTIFICADOR: mas
CARACTER_ESPECIAL: ,
IDENTIFICADOR: res
IDENTIFICADOR: tas
CARACTER_ESPECIAL: ,
IDENTIFICADOR: suma1
CARACTER_ESPECIAL: ,
IDENTIFICADOR: suma2
CARACTER_ESPECIAL: ,
ENTERO: 25
IDENTIFICADOR: ert
CARACTER_ESPECIAL: ;
IDENTIFICADOR: main
IDENTIFICADOR: if
CARACTER_ESPECIAL: (
IDENTIFICADOR: while
CARACTER_ESPECIAL: )
IDENTIFICADOR: if
FLOTANTE: +34.34
FLOTANTE: 34.34
ENTERO: 34
ENTERO: -34
INCREMENTO: ++
MAS: +
DECREMENTO: --
MENOS: -
IDENTIFICADOR: cin
COMPARACION: >
COMPARACION: >
COMPARACION: >=
COMPARACION: <
COMPARACION: <
COMPARACION: <=
COMPARACION: ==
COMPARACION: !=
CARACTER_ESPECIAL: {
IDENTIFICADOR: int
IDENTIFICADOR: x
CARACTER_ESPECIAL: ,
IDENTIFICADOR: y
CARACTER_ESPECIAL: ,
IDENTIFICADOR: z
CARACTER_ESPECIAL: ;
IDENTIFICADOR: real
IDENTIFICADOR: a
CARACTER_ESPECIAL: ,
IDENTIFICADOR: b
CARACTER_ESPECIAL: ,
IDENTIFICADOR: c
CARACTER_ESPECIAL: ;
IDENTIFICADOR: x
ENTERO: 23
CARACTER_ESPECIAL: ;
IDENTIFICADOR: y
ENTERO: 2
ENTERO: +3
ENTERO: -1
CARACTER_ESPECIAL: ;
IDENTIFICADOR: z
IDENTIFICADOR: y
ENTERO: +7
CARACTER_ESPECIAL: ;
IDENTIFICADOR: a
FLOTANTE: 24.0
ENTERO: +4
ENTERO: -1
CARACTER_ESPECIAL: *
ENTERO: 3
CARACTER_ESPECIAL: /
ENTERO: 2
ENTERO: +34
ENTERO: -1
CARACTER_ESPECIAL: ;
IDENTIFICADOR: if
CARACTER_ESPECIAL: (
ENTERO: 2
COMPARACION: >
ENTERO: 3
CARACTER_ESPECIAL: )
IDENTIFICADOR: y
IDENTIFICADOR: a
ENTERO: +3
CARACTER_ESPECIAL: ;
IDENTIFICADOR: else
IDENTIFICADOR: if
CARACTER_ESPECIAL: (
ENTERO: 4
COMPARACION: >
ENTERO: 2
CARACTER_ESPECIAL: )
IDENTIFICADOR: b
FLOTANTE: 3.2
CARACTER_ESPECIAL: ;
IDENTIFICADOR: else
IDENTIFICADOR: b
FLOTANTE: 5.0
CARACTER_ESPECIAL: ;
IDENTIFICADOR: end
CARACTER_ESPECIAL: ;
IDENTIFICADOR: y
IDENTIFICADOR: y
ENTERO: +1
CARACTER_ESPECIAL: ;
IDENTIFICADOR: end
CARACTER_ESPECIAL: ;
IDENTIFICADOR: do
IDENTIFICADOR: y
CARACTER_ESPECIAL: (
IDENTIFICADOR: y
ENTERO: +1
CARACTER_ESPECIAL: )
CARACTER_ESPECIAL: *
ENTERO: 2
ENTERO: +1
CARACTER_ESPECIAL: ;
IDENTIFICADOR: until
CARACTER_ESPECIAL: (
IDENTIFICADOR: y
COMPARACION: ==
ENTERO: 5
CARACTER_ESPECIAL: )
CARACTER_ESPECIAL: ;
IDENTIFICADOR: while
CARACTER_ESPECIAL: (
IDENTIFICADOR: y
COMPARACION: ==
ENTERO: 0
CARACTER_ESPECIAL: )
CARACTER_ESPECIAL: {
IDENTIFICADOR: cout
IDENTIFICADOR: x
CARACTER_ESPECIAL: ;
CARACTER_ESPECIAL: }
CARACTER_ESPECIAL: ;
CARACTER_ESPECIAL: }
